import subprocess

gemnames = """shoulda
ipaddress
responders
htmlentities
authlogic
SystemTimer
configuration
haml-rails
hoptoad_notifier
yard
ruby_core_source
net-http-persistent
cgi_multipart_eof_fix
log4r
airbrake
simple_form
metaclass
net-ldap
dalli
ci_reporter
data_objects
rdiscount
hmx_client
inherited_resources
rb-fsevent
curb
rufus-scheduler
extlib
test-unit
linecache19
timecop
yui-compressor
has_scope
twitter
puppet
dm-core
money
webmock
simple_oauth
typhoeus
http_parser.rb
shoulda-matchers
jwt
stringex
less
ruby-prof
activemerchant
jruby-openssl
listen
culerity
dm-migrations
httpauth
acts_as_list
POpen4
faraday_middleware
trollop
hirb
bootstrap-sass
rack-openid
acts-as-taggable-on
spreadsheet
braintree
mini_magick
ruby-debug-base19
em-http-request
friendly_id
do_sqlite3
ruby-ole
dm-do-adapter
facter
meta_search
rbx-require-relative
subexec
git
bouncy-castle-java
omniauth-oauth2
fakeweb
savon
jammit
ruby-debug19
amqp
mixlib-shellout
riddle
prawn
celerity
escape
parallel
httpi
polyamorous
alpha_omega
syntax
redcarpet
guard-spork
Ascii85
jasmine
email_spec
msgpack
dm-sqlite-adapter
fattr
geokit
attribute-kit
commonjs
thinking-sphinx
rsolr
rb-inotify
colored
less-rails
em-websocket
oa-core
gyoku
wirble
net-http-digest_auth
ruby2ruby
pdf-reader
spruz
ruby-progressbar
autotest
sanitize
webrobots
aws
oa-oauth
liquid
lockfile
omniauth-facebook
netrc
fxruby
compass-rails
ruby-openid-apps-discovery
rr
closure-compiler
bluepill
rspec-instafail
milia
em-resolv-replace
gemcutter
dynamic_form
backports
babosa
jeweler
annotate
nori
librex
ghostplus
aasm
jasmine-core
rubyntlm
engen
paper_trail
amazon-ec2
jenkins
activerecord-jdbc-adapter
em-socksify
parseconfig
exception_notification
vcr
ruby-graphviz
blankslate
pyu-ruby-sasl
health_check
http_connection
bourbon
bundle
koala
resque-scheduler
taps
geoip
wasabi
debugger-ruby_core_source
haml-edge
capybara-webkit
god
oa-openid
akami
vj-sdk
fuubar
twitter-bootstrap-rails
heroku-api
rabl
mongo_mapper
sunspot
win32-api
debugger
mustache
scale_down
file-tail
flog
viewcumber
bitly
jruby-pageant
rubydraw
debugger-linecache
oa-enterprise
oa-basic
growl
maruku
stomp
rails_best_practices
posix-spawn
six-updater-web
dragonfly
ttfunk
rb-fchange
dm-validations
memcached
cookiejar
zip
machinist
escape_utils
connection_pool
slim
dm-timestamps
jquery-ui-rails
sunspot_rails
logging
RubyInline
rpm_contrib
omniauth-oauth
active_utils
dm-aggregates
activeadmin
geocoder
awesome_nested_set
kramdown
nifty-generators
rmail
temple
domain_name
pr_geohash
omniauth-twitter
thrift
dm-types
ffaker
sys-proctable
ntlm-http
hiredis
windows-pr
progressbar
choice
routo
delayed_job_active_record
pony
flay
unf_ext
plucky
unf
simplecov-rcov
fb_graph
little-plugger
aaronh-chronic
rails3-generators
rvm-capistrano
plist
selenium-client
bluecloth
parallel_tests
dm-serializer
pdfkit
sup
foreigner
icalendar
ruby-debug-ide
searchlogic
truncate_html
autotest-rails
jruby-jars
configatron
main
oa-more
rake-compiler
settingslogic
http_router
system_timer
six-updater
ruby-rc4
appointments
dm-constraints
jruby-launcher
twitter-stream
rchardet
prawn-layout
recaptcha
shoulda-context
spider
prawn-core
pry-rails
routing-filter
jruby-rack
facets
remotipart
grit
refinerycms
guard-cucumber
color
rails-erd
pickle
exceptional
css_parser
soap4r
activerecord-import
arrayfields
scout
windows-api
mini_exiftool
after_commit
bare_coffee
flexmock
client_side_validations
activerecord-sqlserver-adapter
rack-oauth2
terminal-table
capistrano_colors
dm-transactions
guard-livereload
headless
win32-process
activerecord-jdbcmysql-adapter
vagrant
watchr
ejs
declarative_authorization
SyslogLogger
useragent
reek
sitemap_generator
simple-navigation
directory_watcher
padrino-core
tinder
do_mysql
yamler
hodel_3000_compliant_logger
prawn-security
globalize3
cells
autotest-growl
redis-store
padrino-helpers
validates_timeliness
acts_as_tree
s3
jsmin
fast-stemmer
roodi
composite_primary_keys
rails3-jquery-autocomplete
rgeo
jdbc-mysql
resque_mailer
devise_invitable
jnunemaker-validatable
draper
garb"""


gemnames = gemnames.strip().splitlines() #[99:198]

for gemname in gemnames:
    #gemname = gem['name']
    
    print '###  ' + gemname
    # Check if gem exists
    try:
        contents = subprocess.check_output(['/usr/bin/env', 'gem', 'list', '--local'])
        if gemname + ' (' in contents:
            continue
        #contents = subprocess.check_output(['/usr/bin/env', 'rvm', 'gemset', 'gemdir', 'allgems-' + gemname], stderr=subprocess.STDOUT)
        #if 'does not exist' not in contents:
        #    continue
    except: pass
    
    print 'Downloading.'
    
    try:
        subprocess.check_call('''/usr/bin/env gem install '%s' ''' % (gemname), shell=True)
        #subprocess.check_call('''/usr/bin/env rvm gemset use --create allgems-%s; /usr/bin/env gem install %s''' % (gemname, gemname), shell=True)
        
        # Create a gemset for it
        # subprocess.check_output(['/usr/bin/env', 'rvm', 'gemset', 'use', '--create', 'allgems-' + gemname])
    
        # Download the gem
        # subprocess.check_call(['/usr/bin/env', 'gem', 'install', gemname])
    
        # Use back the default gemset
        # subprocess.check_output(['/usr/bin/env', 'rvm', 'gemset', 'use', 'default'])
        print 'Installed.'
    except Exception as e:
        print e
        print 'Failed.'


