import os
from pprint import pprint
from distutils.version import StrictVersion

names = os.listdir('databases/v1')

langs = {}

def stringify(s):
    return '@"' + s + '"'

for name in names:
    if not name.endswith('.db'):
        continue
    
    name = os.path.splitext(name)[0]
    
    lang, _, rest = name.partition('--')
    lib, _, version = rest.rpartition('-')
    #print '%s/%s/%s' % (lang, lib, version)
    
    if lang in langs:
        d = langs[lang]
        if lib in d:
            if StrictVersion(d[lib]) < StrictVersion(version):
                d[lib] = version
        else:
            d[lib] = version
    else:
        langs[lang] = { lib: version }



keys = sorted(list(langs))

print '// Generated by gathering/script/langlibs.py'
print 'typedef enum {'
for lang in keys:
    print '    CHLibMapLanguage_%s,' % lang.title()
print '} CHLibMapLanguage;'
print ''
print 'static NSDictionary* CHLibMap(CHLibMapLanguage lang) {'
print '    static dispatch_once_t once;'
for lang in keys:
    print '    static NSDictionary* %s_map = nil;' % lang
print ''
print '    dispatch_once(&once, ^{'
for lang in keys:
    inner = ',\n            '.join('%s: %s' % (stringify(lib), stringify(lang + '/' + lib + '/' + langs[lang][lib])) for lib in langs[lang])
    print '        %s_map = @{\n            %s\n        };' % (lang, inner)
print '    });'
print ''
for lang in keys:
    print '    if (lang == CHLibMapLanguage_%s)' % lang.title()
    print '        return %s_map;' % lang
print '    return nil;'
print '}'